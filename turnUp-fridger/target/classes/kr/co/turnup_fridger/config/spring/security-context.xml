<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

<context:component-scan base-package="domain.security"/>
<!--패스워드 자동으로 암호화해주는 Bean  -->
<beans:bean name="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

<!-- spring sercurity 관련 설정 파일 -->

<!--http 태그 : 웹 인증처리를 위한 설정을 하는 태그.  
		- 하위태그 : intercept-url : 어떤 url경로요청은 어떤권한이 있어야 하는지 설정(경로-권한 매칭)
									하위 url경로부터 잡아야한다. 
									속성 : pattern -url 패턴지정 , access - 권한지정(Spring시큐리티 EL표현식 사용) 
									EL표현식 : hasRole('권한명') , 
												hasAnyRole('권한','권한'[, ....])-여러권한지정.
												isAuthenticated()- 인증한 사용자. 
												permitAll - 인증/권한이 필요없는 경우.
												표현식 앞에 !-not 반대.
					form-login : 로그인관련 설정
								속성 : login-page="로그인폼 요청url" -> 로그인 안한사람이 isAuthenticated()가 필요한 요청했을때 이동할 페이지
										login-processing-url="로그인처리를 요청하는 url경로" -> 
					logout : 로그아웃관련설정
							속성 : logout-url = "로그아웃 처리 요청url"
-->
<http>
	<intercept-url pattern="/admin/**" access ="hasRole('ROLE_ADMIN')"/>
	<intercept-url pattern="/member/**" access="hasAnyRole('ROLE_MEMBER','ROLE_ADMIN')"/>
	<intercept-url pattern="/**" access="permitAll"/>
	
	<form-login login-page="/login_form.do"	
				login-processing-url="/login.do" 
				username-parameter="userId" 
				password-parameter="userPassword"
				authentication-failure-handler-ref="loginFailHandler"
				default-target-url="/index.do"/>
	<logout logout-url="/logout.do" logout-success-url="/index.do"/>
	
	<!--사용자가 권한이 없는 요청을 한 경우 이동할 url등록  , 등록하지 않으면 403뜬다-->
	<access-denied-handler error-page="/error/access_denied.do"/>
</http>

<!--인증(로그인) 처리를 담당할 bean 등록  => AuthenticationProvider -->
<authentication-manager>
	<authentication-provider ref="userAuthenticationProvider"/>
	
</authentication-manager>

</beans:beans>
